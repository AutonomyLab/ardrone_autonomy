diff --git a/ARDroneLib/FFMPEG/Makefile b/ARDroneLib/FFMPEG/Makefile
index 0b96558..0c101a0 100644
--- a/ARDroneLib/FFMPEG/Makefile
+++ b/ARDroneLib/FFMPEG/Makefile
@@ -40,6 +40,8 @@ ifneq ($(FFMPEG_ARCHIVE_ROOTDIR), ffmpeg/)
 	$(SILENT_MAKE)rm -rf $(FFMPEG_ARCHIVE_ROOTDIR)
 endif
 	$(SILENT_MAKE)tar xzf parrot_ffmpeg_build_utils.tar.gz
+	# Extra pacth to remove deprecated warnings
+	$(SILENT_MAKE)sed -i "s/check_cflags -Wall/check_cflags -Wall\ncheck_cflags -Wno-deprecated-declarations/g" ffmpeg/configure
 	$(SILENT_MAKE)echo "Done"
 endif
 endif
diff --git a/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.c b/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.c
index 8466d4c..0b4f2e7 100644
--- a/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.c
+++ b/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.c
@@ -332,11 +332,11 @@ int ardrone_tool_main(int argc, char **argv)
     argc--; argv++;
   }
 
-  if( show_usage || (argc != 0) )
+  /*if( show_usage || (argc != 0) )
   {
     ardrone_tool_usage( appname );
     exit(-1);
-  }
+  }*/
   
   /* After a first analysis, the arguments are restored so they can be passed to the user-defined functions */
   argc=argc_backup;
diff --git a/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.h b/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.h
index a081c9a..93005ec 100644
--- a/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.h
+++ b/ARDroneLib/Soft/Lib/ardrone_tool/ardrone_tool.h
@@ -66,7 +66,7 @@ C_RESULT ardrone_tool_shutdown(void);
 
 void ardrone_tool_init_timers_and_mutex();
 void ardrone_tool_send_com_watchdog(void); // To send it only once
-int main();
+//int main();
 
 // There because not defined in embedded
 void api_configuration_get_ctrl_mode(void);
diff --git a/ARDroneLib/VP_SDK/Build/Makefile b/ARDroneLib/VP_SDK/Build/Makefile
index bda3259..27418d2 100644
--- a/ARDroneLib/VP_SDK/Build/Makefile
+++ b/ARDroneLib/VP_SDK/Build/Makefile
@@ -105,6 +105,10 @@ define ADD_RULE_TEMPLATE
   ifeq ($(USE_ANDROID),yes)
      build_lib: build_$(1)
   endif
+# Following three lines added after more than four hours of WTF debugging -- mani
+  ifeq ($(USE_LINUX),yes)
+     build_lib: build_$(1)
+  endif
   endif
   endif
   endif
diff --git a/ARDroneLib/VP_SDK/Build/generic.makefile b/ARDroneLib/VP_SDK/Build/generic.makefile
index 91895b3..94d1cb8 100644
--- a/ARDroneLib/VP_SDK/Build/generic.makefile
+++ b/ARDroneLib/VP_SDK/Build/generic.makefile
@@ -35,10 +35,25 @@ INTERNAL_MKDIR=mkdir -p
 INTERNAL_ECHO=echo
 
 # (in) GENERIC_COMMAND_PREFIX
+
+# solve problem with system-wide ccache:
+# gcc is in different folder (/usr/lib/ccache) than and ar,objdump and strip.
+# This is only a hack to fix this issue
 INTERNAL_CC:=$(GENERIC_COMMAND_PREFIX)gcc
-INTERNAL_AR:=$(GENERIC_COMMAND_PREFIX)ar
-INTERNAL_OBJCOPY:=$(GENERIC_COMMAND_PREFIX)objcopy
-INTERNAL_STRIP:=$(GENERIC_COMMAND_PREFIX)strip
+
+ifneq (,$(findstring ccache,$(GENERIC_COMMAND_PREFIX)))
+    # Found ccache
+    NON_TOOLCHAIN_PATH=$(shell which ar | sed "s:/ar::")
+    NON_GENERIC_COMMAND_PREFIX=$(NON_TOOLCHAIN_PATH)/
+    INTERNAL_AR:=$(NON_GENERIC_COMMAND_PREFIX)ar
+    INTERNAL_OBJCOPY:=$(NON_GENERIC_COMMAND_PREFIX)objcopy
+    INTERNAL_STRIP:=$(NON_GENERIC_COMMAND_PREFIX)strip
+else
+    INTERNAL_AR:=$(GENERIC_COMMAND_PREFIX)ar
+    INTERNAL_OBJCOPY:=$(GENERIC_COMMAND_PREFIX)objcopy
+    INTERNAL_STRIP:=$(GENERIC_COMMAND_PREFIX)strip
+endif
+
 
 # (in) GENERIC_CFLAGS
 # (in) GENERIC_LDFLAGS
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..2ad03a2
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,25 @@
+SDK_PATH:=$(shell pwd)/ARDroneLib
+PC_TARGET=yes
+USE_LINUX=yes
+
+
+ifdef MYKONOS
+   include $(ARDRONE_CUSTOM_CONFIG)
+   include $(ARDRONE_BUILD_CONFIG)
+else
+   include $(SDK_PATH)/Soft/Build/custom.makefile
+   include $(SDK_PATH)/Soft/Build/config.makefile
+endif
+
+$(SDK_TARGET_DIR)
+
+SDK_FLAGS+="USE_APP=no"
+SDK_FLAGS+="USE_LIB=yes"
+
+all: 
+	@$(MAKE) -C $(SDK_PATH)/Soft/Build $(TMP_SDK_FLAGS) $(SDK_FLAGS) $(MAKECMDGOALS) USE_LINUX=yes
+	@$(MAKE) -C $(SDK_PATH)/VP_SDK/Build $(TMP_SDK_FLAGS) $(SDK_FLAGS) $(MAKECMDGOALS) USE_LINUX=yes
+              
+install:
+	mkdir -p ${INSTALL_PREFIX}
+	find $(SDK_PATH)/Soft/Build -type f -name '*.a' -exec cp '{}' ${INSTALL_PREFIX} \;
--- a/ardrone-sdk-stripped-2.0.1/ARDroneLib/VP_SDK/Build/lib.makefile
+++ b/ardrone-sdk-stripped-2.0.1-patched/ARDroneLib/VP_SDK/Build/lib.makefile
@@ -11,7 +11,9 @@
 include common.makefile

 GENERIC_LIBRARY_TARGET_DIR=$(LIB_TARGET_DIR)
+ifneq ($(GENERIC_TARGET_LIBRARY),)
 GENERIC_TARGET_LIBRARY:=$(GENERIC_LIBRARY_TARGET_DIR)/$(GENERIC_TARGET_LIBRARY)
+endif

 export GENERIC_TARGET_LIBRARY
 export GENERIC_LIBRARY_TARGET_DIR=$(LIB_TARGET_DIR)
 
